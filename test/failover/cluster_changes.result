test_run = require('test_run').new()
---
...
REPLICASET_1 = { 'box_1_a', 'box_1_b', 'box_1_c', 'box_1_d' }
---
...
REPLICASET_2 = { 'box_2_a', 'box_2_b', 'box_2_c' }
---
...
REPLICASET_3 = { 'box_3_a', 'box_3_b' }
---
...
test_run:create_cluster(REPLICASET_1, 'failover')
---
...
test_run:create_cluster(REPLICASET_2, 'failover')
---
...
test_run:create_cluster(REPLICASET_3, 'failover')
---
...
util = require('util')
---
...
util.wait_master(test_run, REPLICASET_1, 'box_1_a')
---
...
util.wait_master(test_run, REPLICASET_2, 'box_2_a')
---
...
util.wait_master(test_run, REPLICASET_3, 'box_3_b')
---
...
test_run:cmd('create server router_1 with script="failover/router_1.lua"')
---
- true
...
test_run:cmd('start server router_1')
---
- true
...
test_run:switch('router_1')
---
- true
...
--
-- In a case of configuration change all replicaset objects are
-- recreated, replica and replica candidate connections are
-- left in old objects, and are garbage collected. Test, that it
-- does not affect new replicasets, and failover uses new weights
-- and new topology.
--
--
-- First test case: reverse weights, when only replica exists,
-- and no replica candidate.
--
vshard.router.cfg(cfg)
---
...
info = vshard.router.info()
---
...
while #info.alerts ~= 1 do fiber.sleep(0.1) info = vshard.router.info() end
---
...
info.alerts
---
- - ['UNKNOWN_BUCKETS', '3000 buckets are not discovered']
...
reverse_weights()
---
...
vshard.router.cfg(cfg)
---
...
info = vshard.router.info()
---
...
while #info.alerts ~= 1 do fiber.sleep(0.1) info = vshard.router.info() end
---
...
info
---
- replicasets:
    971279ef-5c38-4d14-86ee-0e4a56567955:
      replica:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3308
        uuid: dbcf1aaa-4e50-4753-bf06-aaba76297624
      bucket:
        available_rw: 0
      master:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3309
        uuid: 7171703a-fec2-45c9-beac-9a8aa40dcf85
      uuid: 971279ef-5c38-4d14-86ee-0e4a56567955
    739fe4fb-2850-4cde-9637-10150724c5eb:
      replica:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3304
        uuid: 56bb8450-9526-442b-ba96-b96cc38ee2f9
      bucket:
        available_rw: 0
      master:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3301
        uuid: 3e01062d-5c1b-4382-b14e-f80a517cb462
      uuid: 739fe4fb-2850-4cde-9637-10150724c5eb
    832bbba0-9699-4aa1-907d-c7c7af61f5c9:
      replica: &0
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3305
        uuid: 27ef9a48-86f3-4759-89be-17aeaf4bd6ba
      bucket:
        available_rw: 0
      master: *0
      uuid: 832bbba0-9699-4aa1-907d-c7c7af61f5c9
  bucket:
    unreachable: 0
    available_ro: 0
    unknown: 3000
    available_rw: 0
  identification_mode: uuid_as_key
  status: 1
  alerts:
  - ['UNKNOWN_BUCKETS', '3000 buckets are not discovered']
...
test_run:switch('box_1_a')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_1_b')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_1_c')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_1_d')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_2_a')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_2_b')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_2_c')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_3_a')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_3_b')
---
- true
...
reverse_weights()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
--
-- Test removal of candidate and replica.
--
test_run:switch('router_1')
---
- true
...
remove_some_replicas()
---
...
vshard.router.cfg(cfg)
---
...
info = vshard.router.info()
---
...
while #info.alerts ~= 6 do fiber.sleep(0.1) info = vshard.router.info() end
---
...
info
---
- replicasets:
    971279ef-5c38-4d14-86ee-0e4a56567955:
      replica: &0
        status: missing
      bucket:
        unreachable: 0
      master: *0
      uuid: 971279ef-5c38-4d14-86ee-0e4a56567955
    739fe4fb-2850-4cde-9637-10150724c5eb:
      replica:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3304
        uuid: 56bb8450-9526-442b-ba96-b96cc38ee2f9
      bucket:
        available_ro: 0
      master:
        status: missing
      uuid: 739fe4fb-2850-4cde-9637-10150724c5eb
    832bbba0-9699-4aa1-907d-c7c7af61f5c9:
      replica:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3306
        uuid: e2ed64b7-5c3a-4878-9ced-b71a034bd67f
      bucket:
        available_ro: 0
      master:
        status: missing
      uuid: 832bbba0-9699-4aa1-907d-c7c7af61f5c9
  bucket:
    unreachable: 0
    available_ro: 0
    unknown: 3000
    available_rw: 0
  identification_mode: uuid_as_key
  status: 3
  alerts:
  - ['MISSING_MASTER', 'Master is not configured for replicaset 739fe4fb-2850-4cde-9637-10150724c5eb']
  - ['MISSING_MASTER', 'Master is not configured for replicaset 832bbba0-9699-4aa1-907d-c7c7af61f5c9']
  - ['MISSING_MASTER', 'Master is not configured for replicaset 971279ef-5c38-4d14-86ee-0e4a56567955']
  - ['SUBOPTIMAL_REPLICA', 'A current read replica in replicaset 971279ef-5c38-4d14-86ee-0e4a56567955
      is not optimal']
  - ['UNREACHABLE_REPLICASET', 'There is no active replicas in replicaset 971279ef-5c38-4d14-86ee-0e4a56567955']
  - ['UNKNOWN_BUCKETS', '3000 buckets are not discovered']
...
test_run:switch('box_1_b')
---
- true
...
remove_some_replicas()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_1_d')
---
- true
...
remove_some_replicas()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
test_run:switch('box_2_b')
---
- true
...
remove_some_replicas()
---
...
vshard.storage.cfg(cfg, names.replica_uuid[NAME])
---
...
--
-- Test addition of new replicas.
--
test_run:switch('router_1')
---
- true
...
add_some_replicas()
---
...
vshard.router.cfg(cfg)
---
...
info = vshard.router.info()
---
...
while #info.alerts ~= 1 do fiber.sleep(0.1) info = vshard.router.info() end
---
...
info
---
- replicasets:
    971279ef-5c38-4d14-86ee-0e4a56567955:
      replica:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3308
        uuid: dbcf1aaa-4e50-4753-bf06-aaba76297624
      bucket:
        available_rw: 0
      master:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3309
        uuid: 7171703a-fec2-45c9-beac-9a8aa40dcf85
      uuid: 971279ef-5c38-4d14-86ee-0e4a56567955
    739fe4fb-2850-4cde-9637-10150724c5eb:
      replica:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3304
        uuid: 56bb8450-9526-442b-ba96-b96cc38ee2f9
      bucket:
        available_rw: 0
      master:
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3301
        uuid: 3e01062d-5c1b-4382-b14e-f80a517cb462
      uuid: 739fe4fb-2850-4cde-9637-10150724c5eb
    832bbba0-9699-4aa1-907d-c7c7af61f5c9:
      replica: &0
        network_timeout: 0.5
        status: available
        uri: storage@127.0.0.1:3305
        uuid: 27ef9a48-86f3-4759-89be-17aeaf4bd6ba
      bucket:
        available_rw: 0
      master: *0
      uuid: 832bbba0-9699-4aa1-907d-c7c7af61f5c9
  bucket:
    unreachable: 0
    available_ro: 0
    unknown: 3000
    available_rw: 0
  identification_mode: uuid_as_key
  status: 1
  alerts:
  - ['UNKNOWN_BUCKETS', '3000 buckets are not discovered']
...
test_run:switch('default')
---
- true
...
test_run:cmd('stop server router_1')
---
- true
...
test_run:cmd('cleanup server router_1')
---
- true
...
test_run:drop_cluster(REPLICASET_1)
---
...
test_run:drop_cluster(REPLICASET_2)
---
...
test_run:drop_cluster(REPLICASET_3)
---
...
